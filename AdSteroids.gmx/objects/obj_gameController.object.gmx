<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enum gameStates {
setupState,
runningState,
dyingState
}

gameState = gameStates.setupState;
asteroidCount = 0;
playerCount = 0;
stateController = undefined;
playerShip = undefined;
startFrame = 0;
currentFrame = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player died, notify stateController

gameState = gameStates.setupState;
lives--;

//should cleanup now maybe

with (stateController)
{
    event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check if playerCount is zero, if so: dyingState, alarm set

if( gameState == gameStates.runningState )
{
    if( ! is_undefined(asteroidCount)) //stops a crash when this runs before any asteroids have been made
    {
        if (asteroidCount == 0)
        {
            if( ! is_undefined(playerCount)) //ditto
            {
                if( playerCount &gt; 0)
                {
                    event_user(0);
                    //level was beaten, just spawn more asteroids for now
                }
            }
        }
    }
    
    
    if (playerCount == 0)
    {
        alarm_set(0, room_speed * 3);
        gameState = gameStates.dyingState;
    }
    
    currentFrame = stateController.frameCounter;
    
    if ((currentFrame - startFrame) != 0) //first frame doesn't count
    {
        shouldSpawn = (currentFrame - startFrame) mod (room_speed * 10);
        if ( shouldSpawn == 0)
        {
            side = irandom(1);
            ufo = instance_create(side * 1023,irandom(768),obj_ufo);
            ufo.playerShip = playerShip;
        }
    }
    
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start game room
event_user(0);

playerShip = instance_create(480, 352, obj_player);
playerShip.gameController = id;
playerCount++;
gameState = gameStates.runningState;
startFrame = stateController.frameCounter;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn asteroids

var outerX = 0;
var outerY = 0;
var outerWidth = 1024;
var outerHeight = 768;

var innerX = 288;
var innerY = 216;
var innerWidth = 448;
var innerHeight = 336;

var asteroidsTotal = 7;

for (var i = 0; i &lt; asteroidsTotal; i++)
{
    var successful = false;
    
    while(!successful)
    {
        var xPos = irandom_range(outerX, outerWidth);
        var yPos = irandom_range(outerY, outerHeight);
        
        while( (xPos &gt; innerX &amp;&amp; xPos &lt; innerX + innerWidth)
            &amp;&amp; (yPos &gt; innerY &amp;&amp; yPos &lt; innerY + innerHeight))
        {
            xPos = irandom_range(outerX, outerWidth);
            yPos = irandom_range(outerY, outerHeight);
        }
        
        asteroids[i] = instance_create(xPos,yPos, obj_asteroid);
        asteroids[i].gameController = id;
        
        with(asteroids[i])
        {
            successful = place_empty(xPos, yPos);
            if(!successful)
            {
                instance_destroy();
            }
        }
    }
}

asteroidCount = array_length_1d(asteroids);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
